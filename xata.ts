// Generated by Xata Codegen 0.26.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Profile",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "none" },
      { name: "imageUrl", type: "string" },
      { name: "email", type: "string" },
      { name: "userId", type: "string", notNull: true, defaultValue: "-" },
    ],
    revLinks: [
      { column: "profile", table: "Server" },
      { column: "profile", table: "Member" },
      { column: "profile", table: "Channel" },
    ],
  },
  {
    name: "Server",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "none" },
      { name: "imageUrl", type: "string", notNull: true, defaultValue: "''" },
      { name: "inviteCode", type: "string" },
      { name: "profile", type: "link", link: { table: "Profile" } },
      { name: "MemberRole", type: "multiple" },
      { name: "Members", type: "link", link: { table: "Member" } },
    ],
    revLinks: [
      { column: "server", table: "Member" },
      { column: "server", table: "Channel" },
    ],
  },
  {
    name: "Member",
    columns: [
      { name: "role", type: "multiple" },
      {
        name: "profile",
        type: "link",
        link: { table: "Profile" },
        unique: true,
      },
      { name: "server", type: "link", link: { table: "Server" }, unique: true },
      {
        name: "directMessages",
        type: "link",
        link: { table: "DirectMessage" },
      },
      { name: "messages", type: "link", link: { table: "Message" } },
      {
        name: "conversationsInitiated",
        type: "link",
        link: { table: "Conversation" },
      },
      {
        name: "conversationsReceived",
        type: "link",
        link: { table: "Conversation" },
      },
    ],
    revLinks: [
      { column: "member", table: "Message" },
      { column: "memberOneId", table: "Conversation" },
      { column: "memberTwoId", table: "Conversation" },
      { column: "member", table: "DirectMessage" },
      { column: "Members", table: "Server" },
    ],
  },
  {
    name: "Channel",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "''" },
      { name: "ChannelType", type: "multiple" },
      {
        name: "profile",
        type: "link",
        link: { table: "Profile" },
        unique: true,
      },
      { name: "server", type: "link", link: { table: "Server" }, unique: true },
      { name: "messages", type: "link", link: { table: "Message" } },
    ],
    revLinks: [{ column: "channel", table: "Message" }],
  },
  {
    name: "Message",
    columns: [
      { name: "content", type: "text", notNull: true, defaultValue: "-" },
      { name: "fileUrl", type: "string" },
      { name: "member", type: "link", link: { table: "Member" }, unique: true },
      {
        name: "channel",
        type: "link",
        link: { table: "Channel" },
        unique: true,
      },
      { name: "deleted", type: "bool", defaultValue: "false" },
    ],
    revLinks: [
      { column: "messages", table: "Member" },
      { column: "messages", table: "Channel" },
    ],
  },
  {
    name: "Conversation",
    columns: [
      { name: "memberOneId", type: "link", link: { table: "Member" } },
      { name: "memberTwoId", type: "link", link: { table: "Member" } },
      {
        name: "directMessages",
        type: "link",
        link: { table: "DirectMessage" },
      },
    ],
    revLinks: [
      { column: "conversation", table: "DirectMessage" },
      { column: "conversationsInitiated", table: "Member" },
      { column: "conversationsReceived", table: "Member" },
    ],
  },
  {
    name: "DirectMessage",
    columns: [
      { name: "content", type: "text", notNull: true, defaultValue: "." },
      { name: "fileUrl", type: "string", defaultValue: "-" },
      { name: "member", type: "link", link: { table: "Member" }, unique: true },
      { name: "conversation", type: "link", link: { table: "Conversation" } },
      { name: "deleted", type: "bool", defaultValue: "false" },
    ],
    revLinks: [
      { column: "directMessages", table: "Conversation" },
      { column: "directMessages", table: "Member" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Profile = InferredTypes["Profile"];
export type ProfileRecord = Profile & XataRecord;

export type Server = InferredTypes["Server"];
export type ServerRecord = Server & XataRecord;

export type Member = InferredTypes["Member"];
export type MemberRecord = Member & XataRecord;

export type Channel = InferredTypes["Channel"];
export type ChannelRecord = Channel & XataRecord;

export type Message = InferredTypes["Message"];
export type MessageRecord = Message & XataRecord;

export type Conversation = InferredTypes["Conversation"];
export type ConversationRecord = Conversation & XataRecord;

export type DirectMessage = InferredTypes["DirectMessage"];
export type DirectMessageRecord = DirectMessage & XataRecord;

export type DatabaseSchema = {
  Profile: ProfileRecord;
  Server: ServerRecord;
  Member: MemberRecord;
  Channel: ChannelRecord;
  Message: MessageRecord;
  Conversation: ConversationRecord;
  DirectMessage: DirectMessageRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Eliot6001-s-workspace-tk8m76.eu-west-1.xata.sh/db/discordClone",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
